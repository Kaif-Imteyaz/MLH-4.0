Spidering target https://about.me/
Spider progress %: 0
Spider progress %: 7
Spider progress %: 51
Spider progress %: 70
Spider progress %: 78
Spider progress %: 90
Spider progress %: 95
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider progress %: 96
Spider has completed!
https://about.me/s3/
https://about.me/s3/h/z/how-help.69c45d7e.jpg
https://about.me/cdn-cgi/l/email-protection
https://about.me/twitter
https://about.me/legal/privacy/eu
https://about.me/linkedin/
https://about.me/s3/h/favicon/favicon_48.0049c8b6.png
https://about.me/s3/h/z/what-is.a26360e1.jpg
https://about.me/random/
https://about.me/me/
https://about.me/linkedin
https://about.me/twitter/
https://about.me/legal/cookies
https://about.me/legal
https://about.me/diiorio
https://about.me/robots.txt
https://about.me/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js
https://about.me/side-hustlers
https://about.me/s3/h/favicon/favicon_180.60004a0b.png
https://about.me/blowticious
https://about.me/legal/copyright
https://about.me/signup/start
https://about.me/legal/terms
https://about.me/legal/privacy
https://about.me/s3/h/z/phone.b9a91027.png
https://about.me/user/edit/account/emailprefs
https://about.me/login?came_from=%2Fuser%2Fedit.
https://about.me/sitemap.xml
https://about.me/pricing
https://about.me/ajax
https://about.me/user/edit/account
https://about.me/dw/
https://about.me/s3/h/favicon/favicon_192.d2899d23.png
https://about.me/content/
https://about.me/facebook
https://about.me/privacy
https://about.me/s3/h/z/what-kinds.65746b67.jpg
https://about.me/n
https://about.me/content
https://about.me/random
https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount
https://about.me/features
https://about.me/welcome
https://about.me/facebook/
https://about.me/signup/email
https://about.me/s3
https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling
https://about.me/cdn-cgi/styles/cf.errors.ie.css
https://about.me/legal/privacy/eu.
https://about.me/emailsignature
https://about.me/favicon.ico
https://about.me/user/edit/account/billing
https://about.me/dw
https://about.me/s3/h/7adb150b.bundle.js
https://about.me/me
https://about.me/s3/h/z/wait-freelancing.b3763db0.jpg
https://about.me/press
https://about.me/ajax/
https://about.me/user/edit.
https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs
https://about.me/n/
https://about.me/login
https://about.me/mikelerchenfeldt
https://about.me/cdn-cgi/styles/cf.errors.css
https://about.me/
Records to passive scan : 7
Passive Scan completed
Hosts: about.me
Alerts: 
[{'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': 'public, max-age=14400',
  'id': '8405',
  'inputVector': '',
  'messageId': '2068',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/robots.txt',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8406',
  'inputVector': '',
  'messageId': '2068',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/robots.txt',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8407',
  'inputVector': '',
  'messageId': '2068',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/robots.txt',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'lKSYA7ZtBebXkQBW6TwxBo6qYpk',
  'id': '8408',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session\ncookie:aboutme_anon_id',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'wvO_khTIQMYhyjotONVhQuCMUN8',
  'id': '8409',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session\ncookie:aboutme_anon_id',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/linkedin/',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': '4Coqebjf0_O3_LppMM0Nh4Z8eK4',
  'id': '8410',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session\ncookie:aboutme_anon_id',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/',
  'wascid': '-1'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8411',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '15'},
 {'alert': 'Cookie without SameSite Attribute',
  'alertRef': '10054',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '1275',
  'description': 'A cookie has been set without the SameSite attribute, which '
                 'means that the cookie can be sent as a result of a '
                 "'cross-site' request. The SameSite attribute is an effective "
                 'counter measure to cross-site request forgery, cross-site '
                 'script inclusion, and timing attacks.',
  'evidence': 'Set-Cookie: aboutme_anon_id',
  'id': '8412',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Cookie without SameSite Attribute',
  'other': '',
  'param': 'aboutme_anon_id',
  'pluginId': '10054',
  'reference': 'https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site',
  'risk': 'Low',
  'solution': "Ensure that the SameSite attribute is set to either 'lax' or "
              "ideally 'strict' for all cookies.",
  'sourceid': '3',
  'tags': {'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/linkedin/',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'ba2300bf-019b-4a79-a41c-4608393f2c9b',
  'id': '8413',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:aboutme_anon_id',
  'param': 'aboutme_anon_id',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'eyJmdW5uZWxzIjp7InRzIjoxNjk4NjAwMTYxLCJ0dGwiOjg2NDAwLCJmdW5uZWxzIjp7IjIwMTkwMTE2X2hvbWVwYWdlIjp7ImNob2ljZSI6ImNvbnRyb2wifSwiMjAyMTA5MDNfbm9fZW1haWxfc2lnbnVwIjp7ImNob2ljZSI6ImV4cGVyaW1lbnQifSwiMjAyMzAyMDZfbGVzc19icmFuZGluZyI6eyJjaG9pY2UiOiJjb250cm9sIn19fSwiX2F1dGhlbnRpY2F0aW9uX3Rva2VuIjoiNDQ5NzA2OTMyNDU0MDc1NTQ0MTQ1ODk2Mzc2OTY0NTQifQ==',
  'id': '8414',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session',
  'param': 'session',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '-1'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: aboutme_anon_id',
  'id': '8415',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'aboutme_anon_id',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/linkedin/',
  'wascid': '13'},
 {'alert': 'Cookie without SameSite Attribute',
  'alertRef': '10054',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '1275',
  'description': 'A cookie has been set without the SameSite attribute, which '
                 'means that the cookie can be sent as a result of a '
                 "'cross-site' request. The SameSite attribute is an effective "
                 'counter measure to cross-site request forgery, cross-site '
                 'script inclusion, and timing attacks.',
  'evidence': 'Set-Cookie: aboutme_anon_id',
  'id': '8416',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Cookie without SameSite Attribute',
  'other': '',
  'param': 'aboutme_anon_id',
  'pluginId': '10054',
  'reference': 'https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site',
  'risk': 'Low',
  'solution': "Ensure that the SameSite attribute is set to either 'lax' or "
              "ideally 'strict' for all cookies.",
  'sourceid': '3',
  'tags': {'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8417',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8418',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/linkedin/',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: aboutme_anon_id',
  'id': '8419',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'aboutme_anon_id',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8420',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8422',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/linkedin/',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8423',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '13'},
 {'alert': 'Cookie without SameSite Attribute',
  'alertRef': '10054',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '1275',
  'description': 'A cookie has been set without the SameSite attribute, which '
                 'means that the cookie can be sent as a result of a '
                 "'cross-site' request. The SameSite attribute is an effective "
                 'counter measure to cross-site request forgery, cross-site '
                 'script inclusion, and timing attacks.',
  'evidence': 'Set-Cookie: aboutme_anon_id',
  'id': '8427',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Cookie without SameSite Attribute',
  'other': '',
  'param': 'aboutme_anon_id',
  'pluginId': '10054',
  'reference': 'https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site',
  'risk': 'Low',
  'solution': "Ensure that the SameSite attribute is set to either 'lax' or "
              "ideally 'strict' for all cookies.",
  'sourceid': '3',
  'tags': {'OWASP_2017_A05': 'https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8429',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/linkedin/',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8432',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'lKSYA7ZtBebXkQBW6TwxBo6qYpk',
  'id': '8434',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '-1'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: aboutme_anon_id',
  'id': '8435',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'aboutme_anon_id',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8436',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8437',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8440',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/',
  'wascid': '13'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'user',
  'id': '8441',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bUSER\\b and was detected in the '
           'element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8446',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8447',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8448',
  'inputVector': '',
  'messageId': '2117',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/random/',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8449',
  'inputVector': '',
  'messageId': '2102',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/twitter/',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8450',
  'inputVector': '',
  'messageId': '2093',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/sitemap.xml',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8455',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8456',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8457',
  'inputVector': '',
  'messageId': '2120',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/me/',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8459',
  'inputVector': '',
  'messageId': '2108',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/s3/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8460',
  'inputVector': '',
  'messageId': '2083',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': '756c8459-abcd-4bdf-90ea-4ed612925dc5',
  'id': '8461',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:aboutme_anon_id',
  'param': 'aboutme_anon_id',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/linkedin/',
  'wascid': '-1'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8463',
  'inputVector': '',
  'messageId': '2114',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/dw/',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8467',
  'inputVector': '',
  'messageId': '2099',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/content/',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8468',
  'inputVector': '',
  'messageId': '2104',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/ajax/',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600161',
  'id': '8469',
  'inputVector': '',
  'messageId': '2111',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600161, which evaluates to: 2023-10-29 22:52:41',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/n/',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8470',
  'inputVector': '',
  'messageId': '2139',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/privacy',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8471',
  'inputVector': '',
  'messageId': '2141',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'wvO_khTIQMYhyjotONVhQuCMUN8',
  'id': '8473',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/linkedin/',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8474',
  'inputVector': '',
  'messageId': '2144',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/linkedin',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8475',
  'inputVector': '',
  'messageId': '2145',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/ajax',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'eyJmdW5uZWxzIjp7InRzIjoxNjk4NjAwMTYxLCJ0dGwiOjg2NDAwLCJmdW5uZWxzIjp7IjIwMTkwMTE2X2hvbWVwYWdlIjp7ImNob2ljZSI6ImNvbnRyb2wifSwiMjAyMTA5MDNfbm9fZW1haWxfc2lnbnVwIjp7ImNob2ljZSI6ImV4cGVyaW1lbnQifSwiMjAyMzAyMDZfbGVzc19icmFuZGluZyI6eyJjaG9pY2UiOiJjb250cm9sIn19fSwiX2F1dGhlbnRpY2F0aW9uX3Rva2VuIjoiMjMxNTM1NTcwMTU0MDY5MTk4NDM5ODU0OTM0NDE4MjYifQ==',
  'id': '8476',
  'inputVector': '',
  'messageId': '2080',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session',
  'param': 'session',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/linkedin/',
  'wascid': '-1'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 4992003',
  'id': '8487',
  'inputVector': '',
  'messageId': '2126',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/7adb150b.bundle.js',
  'wascid': '-1'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8489',
  'inputVector': '',
  'messageId': '2126',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/7adb150b.bundle.js',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8490',
  'inputVector': '',
  'messageId': '2126',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/7adb150b.bundle.js',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8493',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/emailsignature',
  'wascid': '-1'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 8699608',
  'id': '8495',
  'inputVector': '',
  'messageId': '2130',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/favicon/favicon_48.0049c8b6.png',
  'wascid': '-1'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8496',
  'inputVector': '',
  'messageId': '2130',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/favicon/favicon_48.0049c8b6.png',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8497',
  'inputVector': '',
  'messageId': '2130',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/favicon/favicon_48.0049c8b6.png',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8499',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/features',
  'wascid': '-1'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8509',
  'inputVector': '',
  'messageId': '2132',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/dw',
  'wascid': '15'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 8704156',
  'id': '8510',
  'inputVector': '',
  'messageId': '2131',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/favicon/favicon_192.d2899d23.png',
  'wascid': '-1'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8511',
  'inputVector': '',
  'messageId': '2131',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/favicon/favicon_192.d2899d23.png',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8512',
  'inputVector': '',
  'messageId': '2132',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/dw',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8513',
  'inputVector': '',
  'messageId': '2143',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/favicon.ico',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8514',
  'inputVector': '',
  'messageId': '2131',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/favicon/favicon_192.d2899d23.png',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8516',
  'inputVector': '',
  'messageId': '2153',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/n',
  'wascid': '-1'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8522',
  'inputVector': '',
  'messageId': '2143',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/favicon.ico',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8523',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/login',
  'wascid': '-1'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8524',
  'inputVector': '',
  'messageId': '2144',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/linkedin',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8525',
  'inputVector': '',
  'messageId': '2141',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8527',
  'inputVector': '',
  'messageId': '2143',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/favicon.ico',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8528',
  'inputVector': '',
  'messageId': '2135',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/cdn-cgi/styles/cf.errors.css',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8529',
  'inputVector': '',
  'messageId': '2144',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/linkedin',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8530',
  'inputVector': '',
  'messageId': '2141',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8531',
  'inputVector': '',
  'messageId': '2156',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/s3',
  'wascid': '-1'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8532',
  'inputVector': '',
  'messageId': '2141',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/legal',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8533',
  'inputVector': '',
  'messageId': '2144',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/linkedin',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8534',
  'inputVector': '',
  'messageId': '2144',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/linkedin',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'user',
  'id': '8539',
  'inputVector': '',
  'messageId': '2144',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bUSER\\b and was detected in the '
           'element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/linkedin',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8540',
  'inputVector': '',
  'messageId': '2139',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/privacy',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8541',
  'inputVector': '',
  'messageId': '2144',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/linkedin',
  'wascid': '15'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 2739468',
  'id': '8542',
  'inputVector': '',
  'messageId': '2128',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/favicon/favicon_180.60004a0b.png',
  'wascid': '-1'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8543',
  'inputVector': '',
  'messageId': '2139',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/privacy',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8544',
  'inputVector': '',
  'messageId': '2144',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/linkedin',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8546',
  'inputVector': '',
  'messageId': '2139',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/privacy',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8547',
  'inputVector': '',
  'messageId': '2128',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/favicon/favicon_180.60004a0b.png',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8548',
  'inputVector': '',
  'messageId': '2136',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/cdn-cgi/styles/cf.errors.ie.css',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8549',
  'inputVector': '',
  'messageId': '2128',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/favicon/favicon_180.60004a0b.png',
  'wascid': '15'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8555',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/features',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8558',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/features',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8559',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/features',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8560',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/features',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8562',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/features',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8563',
  'inputVector': '',
  'messageId': '2145',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/ajax',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8564',
  'inputVector': '',
  'messageId': '2145',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/ajax',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8566',
  'inputVector': '',
  'messageId': '2145',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/ajax',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8567',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/emailsignature',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8569',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/emailsignature',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8570',
  'inputVector': '',
  'messageId': '2145',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/ajax',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8571',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/emailsignature',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8572',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/emailsignature',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8573',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/features',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8574',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/features',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8576',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/emailsignature',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8577',
  'inputVector': '',
  'messageId': '2153',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/n',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8578',
  'inputVector': '',
  'messageId': '2153',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/n',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8579',
  'inputVector': '',
  'messageId': '2153',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/n',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8580',
  'inputVector': '',
  'messageId': '2152',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/features',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8581',
  'inputVector': '',
  'messageId': '2153',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/n',
  'wascid': '15'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8582',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/login',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8583',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/emailsignature',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8584',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/emailsignature',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8586',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8587',
  'inputVector': '',
  'messageId': '2156',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8588',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8589',
  'inputVector': '',
  'messageId': '2156',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/s3',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8590',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login',
  'wascid': '13'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'user',
  'id': '8591',
  'inputVector': '',
  'messageId': '2145',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bUSER\\b and was detected in the '
           'element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/ajax',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8592',
  'inputVector': '',
  'messageId': '2156',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/s3',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8593',
  'inputVector': '',
  'messageId': '2146',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/emailsignature',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'user',
  'id': '8594',
  'inputVector': '',
  'messageId': '2153',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bUSER\\b and was detected in the '
           'element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/n',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8595',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/login',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8596',
  'inputVector': '',
  'messageId': '2145',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/ajax',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8597',
  'inputVector': '',
  'messageId': '2156',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/s3',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8598',
  'inputVector': '',
  'messageId': '2153',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/n',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8599',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8600',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/login',
  'wascid': '13'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'user',
  'id': '8601',
  'inputVector': '',
  'messageId': '2156',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bUSER\\b and was detected in the '
           'element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/s3',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8602',
  'inputVector': '',
  'messageId': '2156',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8603',
  'inputVector': '',
  'messageId': '2156',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/s3',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8604',
  'inputVector': '',
  'messageId': '2154',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8605',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/press',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8606',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/side-hustlers',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8607',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/content',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8608',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/twitter',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8609',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/pricing',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8610',
  'inputVector': '',
  'messageId': '2159',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/me',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8611',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/facebook',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'eyJmdW5uZWxzIjp7InRzIjoxNjk4NjAwMTYzLCJ0dGwiOjg2NDAwLCJmdW5uZWxzIjp7IjIwMTkwMTE2X2hvbWVwYWdlIjp7ImNob2ljZSI6ImNvbnRyb2wifSwiMjAyMTA5MDNfbm9fZW1haWxfc2lnbnVwIjp7ImNob2ljZSI6ImV4cGVyaW1lbnQifSwiMjAyMzAyMDZfbGVzc19icmFuZGluZyI6eyJjaG9pY2UiOiJjb250cm9sIn19fSwiX2F1dGhlbnRpY2F0aW9uX3Rva2VuIjoiMjMxNTM1NTcwMTU0MDY5MTk4NDM5ODU0OTM0NDE4MjYifQ==',
  'id': '8612',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session',
  'param': 'session',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/diiorio',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8613',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/random',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'TOe6gmrD55tnA0q4VbavVQatFMc',
  'id': '8617',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/diiorio',
  'wascid': '-1'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 101366',
  'id': '8620',
  'inputVector': '',
  'messageId': '2170',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/z/what-kinds.65746b67.jpg',
  'wascid': '-1'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8621',
  'inputVector': '',
  'messageId': '2170',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/what-kinds.65746b67.jpg',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698498796',
  'id': '8622',
  'inputVector': '',
  'messageId': '2170',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698498796, which evaluates to: 2023-10-28 18:43:16',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/s3/h/z/what-kinds.65746b67.jpg',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8623',
  'inputVector': '',
  'messageId': '2170',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/what-kinds.65746b67.jpg',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'eyJmdW5uZWxzIjp7InRzIjoxNjk4NjAwMTYyLCJ0dGwiOjg2NDAwLCJmdW5uZWxzIjp7IjIwMTkwMTE2X2hvbWVwYWdlIjp7ImNob2ljZSI6ImNvbnRyb2wifSwiMjAyMTA5MDNfbm9fZW1haWxfc2lnbnVwIjp7ImNob2ljZSI6ImV4cGVyaW1lbnQifSwiMjAyMzAyMDZfbGVzc19icmFuZGluZyI6eyJjaG9pY2UiOiJjb250cm9sIn19fSwiX2F1dGhlbnRpY2F0aW9uX3Rva2VuIjoiMjMxNTM1NTcwMTU0MDY5MTk4NDM5ODU0OTM0NDE4MjYifQ==',
  'id': '8628',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session',
  'param': 'session',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/facebook',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'b1uH0kQ7oxmZrpdnfogJ2L2c82s',
  'id': '8632',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/facebook',
  'wascid': '-1'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8645',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/pricing',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8646',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/pricing',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8647',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/pricing',
  'wascid': '13'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 354592',
  'id': '8648',
  'inputVector': '',
  'messageId': '2158',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/z/phone.b9a91027.png',
  'wascid': '-1'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8649',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/pricing',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8650',
  'inputVector': '',
  'messageId': '2158',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/phone.b9a91027.png',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8651',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/pricing',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8655',
  'inputVector': '',
  'messageId': '2158',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/phone.b9a91027.png',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'TOe6gmrD55tnA0q4VbavVQatFMc',
  'id': '8658',
  'inputVector': '',
  'messageId': '2175',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/privacy',
  'wascid': '-1'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8659',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/pricing',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8660',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/pricing',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8662',
  'inputVector': '',
  'messageId': '2161',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/pricing',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'TOe6gmrD55tnA0q4VbavVQatFMc',
  'id': '8665',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/terms',
  'wascid': '-1'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8666',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/content',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8670',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/press',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8671',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/press',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8672',
  'inputVector': '',
  'messageId': '2159',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/me',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8673',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/press',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8674',
  'inputVector': '',
  'messageId': '2159',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/me',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8675',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/press',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8677',
  'inputVector': '',
  'messageId': '2159',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/me',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8678',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/press',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8680',
  'inputVector': '',
  'messageId': '2159',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/me',
  'wascid': '15'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 510297',
  'id': '8681',
  'inputVector': '',
  'messageId': '2173',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/z/how-help.69c45d7e.jpg',
  'wascid': '-1'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8682',
  'inputVector': '',
  'messageId': '2173',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/how-help.69c45d7e.jpg',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8683',
  'inputVector': '',
  'messageId': '2173',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/how-help.69c45d7e.jpg',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'user',
  'id': '8686',
  'inputVector': '',
  'messageId': '2159',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bUSER\\b and was detected in the '
           'element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/me',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8688',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/press',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8689',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/press',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8690',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/content',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8691',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/content',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8692',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/content',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8693',
  'inputVector': '',
  'messageId': '2157',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/press',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8694',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/content',
  'wascid': '15'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 1263',
  'id': '8695',
  'inputVector': '',
  'messageId': '2172',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/z/what-is.a26360e1.jpg',
  'wascid': '-1'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8696',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/random',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8697',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/random',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8698',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/random',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8699',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/random',
  'wascid': '13'},
 {'alert': 'Retrieved from Cache',
  'alertRef': '10050',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The content was retrieved from a shared cache. If the '
                 'response data is sensitive, personal or user-specific, this '
                 'may result in sensitive information being leaked. In some '
                 'cases, this may even result in a user gaining complete '
                 'control of the session of another user, depending on the '
                 'configuration of the caching components in use in their '
                 'environment. This is primarily an issue where caching '
                 'servers such as "proxy" caches are configured on the local '
                 'network. This configuration is typically found in corporate '
                 'or educational environments, for instance. ',
  'evidence': 'Age: 5327250',
  'id': '8700',
  'inputVector': '',
  'messageId': '2174',
  'method': 'GET',
  'name': 'Retrieved from Cache',
  'other': "The presence of the 'Age' header indicates that that a HTTP/1.1 "
           'compliant caching server is in use.',
  'param': '',
  'pluginId': '10050',
  'reference': 'https://tools.ietf.org/html/rfc7234\n'
               'https://tools.ietf.org/html/rfc7231\n'
               'http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html '
               '(obsoleted by rfc7234)',
  'risk': 'Informational',
  'solution': 'Validate that the response does not contain sensitive, personal '
              'or user-specific information.  If it does, consider the use of '
              'the following HTTP response headers, to limit, or prevent the '
              'content being stored and retrieved from the cache by another '
              'user:\n'
              'Cache-Control: no-cache, no-store, must-revalidate, private\n'
              'Pragma: no-cache\n'
              'Expires: 0\n'
              'This configuration directs both HTTP 1.0 and HTTP 1.1 compliant '
              'caching servers to not store the response, and to not retrieve '
              'the response (without validation) from the cache, in response '
              'to a similar request.',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/s3/h/z/wait-freelancing.b3763db0.jpg',
  'wascid': '-1'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8701',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/random',
  'wascid': '15'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8702',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/side-hustlers',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8703',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/side-hustlers',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8704',
  'inputVector': '',
  'messageId': '2172',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/what-is.a26360e1.jpg',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8705',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/side-hustlers',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698598900',
  'id': '8706',
  'inputVector': '',
  'messageId': '2172',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698598900, which evaluates to: 2023-10-29 22:31:40',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/s3/h/z/what-is.a26360e1.jpg',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8707',
  'inputVector': '',
  'messageId': '2159',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/me',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8709',
  'inputVector': '',
  'messageId': '2174',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/wait-freelancing.b3763db0.jpg',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8710',
  'inputVector': '',
  'messageId': '2159',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/me',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8712',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/side-hustlers',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8714',
  'inputVector': '',
  'messageId': '2174',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/wait-freelancing.b3763db0.jpg',
  'wascid': '15'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8715',
  'inputVector': '',
  'messageId': '2175',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/legal/privacy',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8716',
  'inputVector': '',
  'messageId': '2187',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8717',
  'inputVector': '',
  'messageId': '2172',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/s3/h/z/what-is.a26360e1.jpg',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8718',
  'inputVector': '',
  'messageId': '2175',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/privacy',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8719',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/side-hustlers',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8721',
  'inputVector': '',
  'messageId': '2175',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/privacy',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8723',
  'inputVector': '',
  'messageId': '2175',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/privacy',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'B_kjfLi49uyRw4xT4B5_04HAzhI',
  'id': '8724',
  'inputVector': '',
  'messageId': '2194',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/user/edit/account/emailprefs',
  'wascid': '-1'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8725',
  'inputVector': '',
  'messageId': '2175',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/legal/privacy',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'B_kjfLi49uyRw4xT4B5_04HAzhI',
  'id': '8728',
  'inputVector': '',
  'messageId': '2199',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/privacy/eu.',
  'wascid': '-1'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8733',
  'inputVector': '',
  'messageId': '2188',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/cdn-cgi/l/email-protection',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8734',
  'inputVector': '',
  'messageId': '2188',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/cdn-cgi/l/email-protection',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8735',
  'inputVector': '',
  'messageId': '2188',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/cdn-cgi/l/email-protection',
  'wascid': '15'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8736',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/twitter',
  'wascid': '13'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'admin',
  'id': '8737',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bADMIN\\b and was detected in '
           'the element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/random',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'B_kjfLi49uyRw4xT4B5_04HAzhI',
  'id': '8738',
  'inputVector': '',
  'messageId': '2201',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/user/edit/account',
  'wascid': '-1'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8739',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/twitter',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'admin',
  'id': '8740',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bADMIN\\b and was detected in '
           'the element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/side-hustlers',
  'wascid': '13'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'admin',
  'id': '8741',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bADMIN\\b and was detected in '
           'the element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/content',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'B_kjfLi49uyRw4xT4B5_04HAzhI',
  'id': '8742',
  'inputVector': '',
  'messageId': '2203',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/user/edit/account/billing',
  'wascid': '-1'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8744',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/random',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8747',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/twitter',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8748',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/content',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8749',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/side-hustlers',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8752',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/twitter',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8753',
  'inputVector': '',
  'messageId': '2199',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/privacy/eu.',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8755',
  'inputVector': '',
  'messageId': '2162',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/content',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8757',
  'inputVector': '',
  'messageId': '2199',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/privacy/eu.',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8758',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/twitter',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8759',
  'inputVector': '',
  'messageId': '2164',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/side-hustlers',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'TOe6gmrD55tnA0q4VbavVQatFMc',
  'id': '8762',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '-1'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600164',
  'id': '8764',
  'inputVector': '',
  'messageId': '2199',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600164, which evaluates to: 2023-10-29 22:52:44',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/legal/privacy/eu.',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8765',
  'inputVector': '',
  'messageId': '2201',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/user/edit/account',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8766',
  'inputVector': '',
  'messageId': '2203',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/user/edit/account/billing',
  'wascid': '13'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'TOe6gmrD55tnA0q4VbavVQatFMc',
  'id': '8767',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/blowticious',
  'wascid': '-1'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8768',
  'inputVector': '',
  'messageId': '2201',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/user/edit/account',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8769',
  'inputVector': '',
  'messageId': '2193',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/welcome',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8770',
  'inputVector': '',
  'messageId': '2175',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/privacy',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8771',
  'inputVector': '',
  'messageId': '2203',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/user/edit/account/billing',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600164',
  'id': '8772',
  'inputVector': '',
  'messageId': '2201',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600164, which evaluates to: 2023-10-29 22:52:44',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/user/edit/account',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600164',
  'id': '8773',
  'inputVector': '',
  'messageId': '2203',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600164, which evaluates to: 2023-10-29 22:52:44',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/user/edit/account/billing',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8774',
  'inputVector': '',
  'messageId': '2169',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/random',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8775',
  'inputVector': '',
  'messageId': '2175',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/privacy',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'TOe6gmrD55tnA0q4VbavVQatFMc',
  'id': '8776',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/diiorio',
  'wascid': '-1'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8777',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/facebook',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8778',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/legal/terms',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8779',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/facebook',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8780',
  'inputVector': '',
  'messageId': '2193',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/welcome',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8783',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/terms',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8784',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/facebook',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8786',
  'inputVector': '',
  'messageId': '2194',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/user/edit/account/emailprefs',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8787',
  'inputVector': '',
  'messageId': '2193',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/welcome',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8788',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/terms',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8789',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/facebook',
  'wascid': '13'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'admin',
  'id': '8791',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bADMIN\\b and was detected in '
           'the element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/twitter',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8792',
  'inputVector': '',
  'messageId': '2194',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/user/edit/account/emailprefs',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8793',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/terms',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8794',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/twitter',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8795',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/facebook',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600164',
  'id': '8796',
  'inputVector': '',
  'messageId': '2194',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600164, which evaluates to: 2023-10-29 22:52:44',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/user/edit/account/emailprefs',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8797',
  'inputVector': '',
  'messageId': '2193',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/welcome',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8801',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/twitter',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8802',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/legal/terms',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600163',
  'id': '8803',
  'inputVector': '',
  'messageId': '2193',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600163, which evaluates to: 2023-10-29 22:52:43',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/welcome',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8805',
  'inputVector': '',
  'messageId': '2163',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/twitter',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8808',
  'inputVector': '',
  'messageId': '2193',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/welcome',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8809',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/terms',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600163',
  'id': '8810',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600163, which evaluates to: 2023-10-29 22:52:43',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/legal/terms',
  'wascid': '13'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'admin',
  'id': '8811',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bADMIN\\b and was detected in '
           'the element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/facebook',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8812',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/facebook',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600162',
  'id': '8813',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600162, which evaluates to: 2023-10-29 22:52:42',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/facebook',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8814',
  'inputVector': '',
  'messageId': '2185',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/terms',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8815',
  'inputVector': '',
  'messageId': '2171',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/facebook',
  'wascid': '15'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8816',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/diiorio',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8817',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/diiorio',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8818',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/diiorio',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8819',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/blowticious',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8820',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/diiorio',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8821',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/blowticious',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8822',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/blowticious',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8823',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/diiorio',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8824',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/blowticious',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8825',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8826',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8827',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/blowticious',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8828',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8829',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8830',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'admin',
  'id': '8831',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bADMIN\\b and was detected in '
           'the element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/diiorio',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8832',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/diiorio',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600163',
  'id': '8833',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600163, which evaluates to: 2023-10-29 22:52:43',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/diiorio',
  'wascid': '13'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'admin',
  'id': '8834',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bADMIN\\b and was detected in '
           'the element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/blowticious',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8835',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/blowticious',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600163',
  'id': '8836',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600163, which evaluates to: 2023-10-29 22:52:43',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/blowticious',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8837',
  'inputVector': '',
  'messageId': '2207',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/diiorio',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': 'admin',
  'id': '8838',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following pattern was used: \\bADMIN\\b and was detected in '
           'the element starting with: "<script type="text/json" '
           'class="contextData">{"globals":{"UNSUPPORTED":false,"DOMAIN_NAME":"about.me","DOMAIN_NAME_URL":"https:/", '
           'see evidence field for the suspicious comment/snippet.',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/',
           'WSTG-v42-INFO-05': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage'},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8839',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8840',
  'inputVector': '',
  'messageId': '2206',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/blowticious',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8841',
  'inputVector': '',
  'messageId': '2205',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/mikelerchenfeldt',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'B_kjfLi49uyRw4xT4B5_04HAzhI',
  'id': '8842',
  'inputVector': '',
  'messageId': '2208',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/copyright',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'MVpAIJ9Bb7SxBQFDp5vBfNxe5FY',
  'id': '8843',
  'inputVector': '',
  'messageId': '2215',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/user/edit.',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'U_BmI0ffhYpbWEJRCoUogvke0NY',
  'id': '8844',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'eyJmdW5uZWxzIjp7InRzIjoxNjk4NjAwMTY1LCJ0dGwiOjg2NDAwLCJmdW5uZWxzIjp7IjIwMTkwMTE2X2hvbWVwYWdlIjp7ImNob2ljZSI6ImNvbnRyb2wifSwiMjAyMTA5MDNfbm9fZW1haWxfc2lnbnVwIjp7ImNob2ljZSI6ImV4cGVyaW1lbnQifSwiMjAyMzAyMDZfbGVzc19icmFuZGluZyI6eyJjaG9pY2UiOiJjb250cm9sIn19fSwiX2F1dGhlbnRpY2F0aW9uX3Rva2VuIjoiMjMxNTM1NTcwMTU0MDY5MTk4NDM5ODU0OTM0NDE4MjYifQ==',
  'id': '8845',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session',
  'param': 'session',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'U_BmI0ffhYpbWEJRCoUogvke0NY',
  'id': '8846',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'U_BmI0ffhYpbWEJRCoUogvke0NY',
  'id': '8847',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'U_BmI0ffhYpbWEJRCoUogvke0NY',
  'id': '8848',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'B_kjfLi49uyRw4xT4B5_04HAzhI',
  'id': '8849',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/cookies',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'eyJmdW5uZWxzIjp7InRzIjoxNjk4NjAwMTY0LCJ0dGwiOjg2NDAwLCJmdW5uZWxzIjp7IjIwMTkwMTE2X2hvbWVwYWdlIjp7ImNob2ljZSI6ImNvbnRyb2wifSwiMjAyMTA5MDNfbm9fZW1haWxfc2lnbnVwIjp7ImNob2ljZSI6ImV4cGVyaW1lbnQifSwiMjAyMzAyMDZfbGVzc19icmFuZGluZyI6eyJjaG9pY2UiOiJjb250cm9sIn19fSwiX2F1dGhlbnRpY2F0aW9uX3Rva2VuIjoiMjMxNTM1NTcwMTU0MDY5MTk4NDM5ODU0OTM0NDE4MjYifQ==',
  'id': '8851',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session',
  'param': 'session',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/cookies',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'U_BmI0ffhYpbWEJRCoUogvke0NY',
  'id': '8856',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'B_kjfLi49uyRw4xT4B5_04HAzhI',
  'id': '8857',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/legal/cookies',
  'wascid': '-1'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8863',
  'inputVector': '',
  'messageId': '2208',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/legal/copyright',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8864',
  'inputVector': '',
  'messageId': '2208',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/copyright',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8866',
  'inputVector': '',
  'messageId': '2208',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/copyright',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8868',
  'inputVector': '',
  'messageId': '2208',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/copyright',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8870',
  'inputVector': '',
  'messageId': '2208',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/legal/copyright',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8875',
  'inputVector': '',
  'messageId': '2215',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/user/edit.',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8876',
  'inputVector': '',
  'messageId': '2215',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/user/edit.',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8877',
  'inputVector': '',
  'messageId': '2208',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/copyright',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600166',
  'id': '8878',
  'inputVector': '',
  'messageId': '2215',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600166, which evaluates to: 2023-10-29 22:52:46',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/user/edit.',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8879',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8880',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8881',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8882',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8883',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '15'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8884',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8885',
  'inputVector': '',
  'messageId': '2208',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/copyright',
  'wascid': '15'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8886',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8887',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8888',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8889',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8890',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '13'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8891',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/legal/cookies',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8892',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8893',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8894',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8895',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8896',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/cookies',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8897',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8898',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8899',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/cookies',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8900',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8901',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8902',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/legal/cookies',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8903',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8904',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/legal/cookies',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8905',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8906',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8907',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600165',
  'id': '8908',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600165, which evaluates to: 2023-10-29 22:52:45',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600165',
  'id': '8909',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600165, which evaluates to: 2023-10-29 22:52:45',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8910',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8911',
  'inputVector': '',
  'messageId': '2213',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/privacy/eu',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8912',
  'inputVector': '',
  'messageId': '2211',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Femailprefs',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600165',
  'id': '8913',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600165, which evaluates to: 2023-10-29 22:52:45',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8914',
  'inputVector': '',
  'messageId': '2210',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8915',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/cookies',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600164',
  'id': '8916',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600164, which evaluates to: 2023-10-29 22:52:44',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/legal/cookies',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8917',
  'inputVector': '',
  'messageId': '2212',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit%2Faccount%2Fbilling',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8918',
  'inputVector': '',
  'messageId': '2209',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/legal/cookies',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': '8qTYXYiBBSWRLjMLlMo3A03V-UY',
  'id': '8919',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'MVpAIJ9Bb7SxBQFDp5vBfNxe5FY',
  'id': '8920',
  'inputVector': '',
  'messageId': '2215',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/user/edit.',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'High',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'eyJmdW5uZWxzIjp7InRzIjoxNjk4NjAwMTY2LCJ0dGwiOjg2NDAwLCJmdW5uZWxzIjp7IjIwMTkwMTE2X2hvbWVwYWdlIjp7ImNob2ljZSI6ImNvbnRyb2wifSwiMjAyMTA5MDNfbm9fZW1haWxfc2lnbnVwIjp7ImNob2ljZSI6ImV4cGVyaW1lbnQifSwiMjAyMzAyMDZfbGVzc19icmFuZGluZyI6eyJjaG9pY2UiOiJjb250cm9sIn19fSwiX2F1dGhlbnRpY2F0aW9uX3Rva2VuIjoiMjMxNTM1NTcwMTU0MDY5MTk4NDM5ODU0OTM0NDE4MjYifQ==',
  'id': '8922',
  'inputVector': '',
  'messageId': '2215',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session',
  'param': 'session',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/user/edit.',
  'wascid': '-1'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8923',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8924',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8925',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8926',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8927',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8928',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600167',
  'id': '8929',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600167, which evaluates to: 2023-10-29 22:52:47',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8930',
  'inputVector': '',
  'messageId': '2217',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/login?came_from=%2Fuser%2Fedit.',
  'wascid': '15'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'hGwn3Ce9VD5LawqB6QSImojzG74',
  'id': '8931',
  'inputVector': '',
  'messageId': '2220',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/signup/email',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'hGwn3Ce9VD5LawqB6QSImojzG74',
  'id': '8932',
  'inputVector': '',
  'messageId': '2223',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/signup/start',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'gYohBToo-Be23t9nSQ0YQOaKJtg',
  'id': '8933',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/signup/email',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'gYohBToo-Be23t9nSQ0YQOaKJtg',
  'id': '8934',
  'inputVector': '',
  'messageId': '2225',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/signup/start',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': '2bkKksldw64_Et6UvKIdNUsrE9s',
  'id': '8935',
  'inputVector': '',
  'messageId': '2224',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/signup/email',
  'wascid': '-1'},
 {'alert': 'Session Management Response Identified',
  'alertRef': '10112',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '-1',
  'description': 'The given response has been identified as containing a '
                 "session management token. The 'Other Info' field contains a "
                 'set of header tokens that can be used in the Header Based '
                 'Session Management Method. If the request is in a context '
                 'which has a Session Management Method set to "Auto-Detect" '
                 'then this rule will change the session management to use the '
                 'tokens identified.',
  'evidence': 'qLjKPFpWL62tSj-H7X5mCEA59xY',
  'id': '8936',
  'inputVector': '',
  'messageId': '2226',
  'method': 'GET',
  'name': 'Session Management Response Identified',
  'other': '\ncookie:session.sig\ncookie:session',
  'param': 'session.sig',
  'pluginId': '10112',
  'reference': 'https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id',
  'risk': 'Informational',
  'solution': 'This is an informational alert rather than a vulnerability and '
              'so there is nothing to fix.',
  'sourceid': '3',
  'tags': {},
  'url': 'https://about.me/signup/start',
  'wascid': '-1'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8937',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/signup/email',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8938',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/signup/email',
  'wascid': '15'},
 {'alert': 'Re-examine Cache-control Directives',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Low',
  'cweid': '525',
  'description': 'The cache-control header has not been set properly or is '
                 'missing, allowing the browser and proxies to cache content. '
                 'For static assets like css, js, or image files this might be '
                 'intended, however, the resources should be reviewed to '
                 'ensure that no sensitive content will be cached.',
  'evidence': '',
  'id': '8939',
  'inputVector': '',
  'messageId': '2223',
  'method': 'GET',
  'name': 'Re-examine Cache-control Directives',
  'other': '',
  'param': 'cache-control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\n'
               'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n'
               'https://grayduck.mn/2021/09/13/cache-control-recommendations/',
  'risk': 'Informational',
  'solution': 'For secure content, ensure the cache-control HTTP header is set '
              'with "no-cache, no-store, must-revalidate". If an asset should '
              'be cached consider setting the directives "public, max-age, '
              'immutable".',
  'sourceid': '3',
  'tags': {'WSTG-v42-ATHN-06': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses'},
  'url': 'https://about.me/signup/start',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8940',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/signup/email',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8942',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/signup/email',
  'wascid': '13'},
 {'alert': 'Content Security Policy (CSP) Header Not Set',
  'alertRef': '10038-1',
  'attack': '',
  'confidence': 'High',
  'cweid': '693',
  'description': 'Content Security Policy (CSP) is an added layer of security '
                 'that helps to detect and mitigate certain types of attacks, '
                 'including Cross Site Scripting (XSS) and data injection '
                 'attacks. These attacks are used for everything from data '
                 'theft to site defacement or distribution of malware. CSP '
                 'provides a set of standard HTTP headers that allow website '
                 'owners to declare approved sources of content that browsers '
                 'should be allowed to load on that page � covered types are '
                 'JavaScript, CSS, HTML frames, fonts, images and embeddable '
                 'objects such as Java applets, ActiveX, audio and video '
                 'files.',
  'evidence': '',
  'id': '8943',
  'inputVector': '',
  'messageId': '2223',
  'method': 'GET',
  'name': 'Content Security Policy (CSP) Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10038',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\n'
               'https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\n'
               'http://www.html5rocks.com/en/tutorials/security/content-security-policy/\n'
               'http://caniuse.com/#feat=contentsecuritypolicy\n'
               'http://content-security-policy.com/',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to set the Content-Security-Policy header.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/signup/start',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session',
  'id': '8947',
  'inputVector': '',
  'messageId': '2223',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/signup/start',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8949',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/signup/email',
  'wascid': '15'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: session.sig',
  'id': '8954',
  'inputVector': '',
  'messageId': '2223',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'session.sig',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/',
           'WSTG-v42-SESS-02': 'https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes'},
  'url': 'https://about.me/signup/start',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script async '
              'src="https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC"></script>',
  'id': '8962',
  'inputVector': '',
  'messageId': '2223',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://www.googletagmanager.com/gtag/js?id=G-LE3EMX7RDC',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'tags': {'OWASP_2021_A08': 'https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/'},
  'url': 'https://about.me/signup/start',
  'wascid': '15'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8966',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/signup/email',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600235',
  'id': '8967',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600235, which evaluates to: 2023-10-29 22:53:55',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/signup/email',
  'wascid': '13'},
 {'alert': 'Strict-Transport-Security Header Not Set',
  'alertRef': '10035',
  'attack': '',
  'confidence': 'High',
  'cweid': '319',
  'description': 'HTTP Strict Transport Security (HSTS) is a web security '
                 'policy mechanism whereby a web server declares that '
                 'complying user agents (such as a web browser) are to '
                 'interact with it using only secure HTTPS connections (i.e. '
                 'HTTP layered over TLS/SSL). HSTS is an IETF standards track '
                 'protocol and is specified in RFC 6797.',
  'evidence': '',
  'id': '8970',
  'inputVector': '',
  'messageId': '2223',
  'method': 'GET',
  'name': 'Strict-Transport-Security Header Not Set',
  'other': '',
  'param': '',
  'pluginId': '10035',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n'
               'https://owasp.org/www-community/Security_Headers\n'
               'http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n'
               'http://caniuse.com/stricttransportsecurity\n'
               'http://tools.ietf.org/html/rfc6797',
  'risk': 'Low',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is configured to enforce Strict-Transport-Security.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/signup/start',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8971',
  'inputVector': '',
  'messageId': '2222',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/signup/email',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '693',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '8975',
  'inputVector': '',
  'messageId': '2223',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'x-content-type-options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A06': 'https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html',
           'OWASP_2021_A05': 'https://owasp.org/Top10/A05_2021-Security_Misconfiguration/'},
  'url': 'https://about.me/signup/start',
  'wascid': '15'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600236',
  'id': '8976',
  'inputVector': '',
  'messageId': '2226',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600236, which evaluates to: 2023-10-29 22:53:56',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/signup/start',
  'wascid': '13'},
 {'alert': 'Timestamp Disclosure - Unix',
  'alertRef': '10096',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'A timestamp was disclosed by the application/web server - '
                 'Unix',
  'evidence': '1698600235',
  'id': '8978',
  'inputVector': '',
  'messageId': '2225',
  'method': 'GET',
  'name': 'Timestamp Disclosure - Unix',
  'other': '1698600235, which evaluates to: 2023-10-29 22:53:55',
  'param': '',
  'pluginId': '10096',
  'reference': 'http://projects.webappsec.org/w/page/13246936/Information%20Leakage',
  'risk': 'Low',
  'solution': 'Manually confirm that the timestamp data is not sensitive, and '
              'that the data cannot be aggregated to disclose exploitable '
              'patterns.',
  'sourceid': '3',
  'tags': {'OWASP_2017_A03': 'https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html',
           'OWASP_2021_A01': 'https://owasp.org/Top10/A01_2021-Broken_Access_Control/'},
  'url': 'https://about.me/signup/start',
  'wascid': '13'}]
